// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicStreaming.Infrastructure.Data;

#nullable disable

namespace MusicStreaming.Infrastructure.Migrations
{
    [DbContext(typeof(MusicStreamingDbContext))]
    partial class MusicStreamingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("MusicStreaming.Core.Entities.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArtistId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            Genre = "Metal",
                            ReleaseYear = 1988,
                            Title = "And Justice for All"
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 2,
                            Genre = "Pop",
                            ReleaseYear = 1999,
                            Title = "Baby One More Time"
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 3,
                            Genre = "Electronic",
                            ReleaseYear = 1995,
                            Title = "I Care Because You Do"
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 4,
                            Genre = "K-pop",
                            ReleaseYear = 2016,
                            Title = "1 of 1"
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 5,
                            Genre = "Hip-hop",
                            ReleaseYear = 1989,
                            Title = "3 Feet High and Rising"
                        },
                        new
                        {
                            Id = 6,
                            ArtistId = 5,
                            Genre = "Hip-hop",
                            ReleaseYear = 2020,
                            Title = "Reloaded"
                        },
                        new
                        {
                            Id = 7,
                            ArtistId = 1,
                            Genre = "Metal",
                            ReleaseYear = 1991,
                            Title = "Enter the Metal"
                        });
                });

            modelBuilder.Entity("MusicStreaming.Core.Entities.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genre = "Metal",
                            Name = "Metallica"
                        },
                        new
                        {
                            Id = 2,
                            Genre = "Pop",
                            Name = "Britney Spears"
                        },
                        new
                        {
                            Id = 3,
                            Genre = "Electronic",
                            Name = "Aphex Twin"
                        },
                        new
                        {
                            Id = 4,
                            Genre = "K-pop",
                            Name = "SHINee"
                        },
                        new
                        {
                            Id = 5,
                            Genre = "Hip-hop",
                            Name = "De La Soul"
                        });
                });

            modelBuilder.Entity("MusicStreaming.Core.Entities.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Playlists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "My Metal Playlist",
                            UserId = "1"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Pop Hits",
                            UserId = "1"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Hip-Hop Essentials",
                            UserId = "1"
                        });
                });

            modelBuilder.Entity("MusicStreaming.Core.Entities.PlaylistSong", b =>
                {
                    b.Property<int>("PlaylistId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SongId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlaylistId", "SongId");

                    b.HasIndex("SongId");

                    b.ToTable("PlaylistSongs");

                    b.HasData(
                        new
                        {
                            PlaylistId = 1,
                            SongId = 1
                        },
                        new
                        {
                            PlaylistId = 1,
                            SongId = 2
                        },
                        new
                        {
                            PlaylistId = 1,
                            SongId = 12
                        },
                        new
                        {
                            PlaylistId = 2,
                            SongId = 3
                        },
                        new
                        {
                            PlaylistId = 2,
                            SongId = 4
                        },
                        new
                        {
                            PlaylistId = 2,
                            SongId = 13
                        },
                        new
                        {
                            PlaylistId = 3,
                            SongId = 9
                        },
                        new
                        {
                            PlaylistId = 3,
                            SongId = 10
                        },
                        new
                        {
                            PlaylistId = 3,
                            SongId = 5
                        });
                });

            modelBuilder.Entity("MusicStreaming.Core.Entities.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlbumId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumId = 1,
                            Duration = 500,
                            Genre = "Metal",
                            ReleaseDate = new DateTime(1988, 9, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "One"
                        },
                        new
                        {
                            Id = 2,
                            AlbumId = 1,
                            Duration = 330,
                            Genre = "Metal",
                            ReleaseDate = new DateTime(1988, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Enter Sandman"
                        },
                        new
                        {
                            Id = 3,
                            AlbumId = 2,
                            Duration = 270,
                            Genre = "Pop",
                            ReleaseDate = new DateTime(1999, 9, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Baby One More Time"
                        },
                        new
                        {
                            Id = 4,
                            AlbumId = 2,
                            Duration = 300,
                            Genre = "Pop",
                            ReleaseDate = new DateTime(1999, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "You Drive Me Crazy"
                        },
                        new
                        {
                            Id = 5,
                            AlbumId = 3,
                            Duration = 380,
                            Genre = "Electronic",
                            ReleaseDate = new DateTime(1995, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Windowlicker"
                        },
                        new
                        {
                            Id = 6,
                            AlbumId = 3,
                            Duration = 200,
                            Genre = "Electronic",
                            ReleaseDate = new DateTime(1995, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Ventolin"
                        },
                        new
                        {
                            Id = 7,
                            AlbumId = 4,
                            Duration = 340,
                            Genre = "K-pop",
                            ReleaseDate = new DateTime(2016, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "View from the Top"
                        },
                        new
                        {
                            Id = 8,
                            AlbumId = 4,
                            Duration = 250,
                            Genre = "K-pop",
                            ReleaseDate = new DateTime(2016, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Tell Me What to Do"
                        },
                        new
                        {
                            Id = 9,
                            AlbumId = 5,
                            Duration = 230,
                            Genre = "Hip-hop",
                            ReleaseDate = new DateTime(1989, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Potholes in My Lawn"
                        },
                        new
                        {
                            Id = 10,
                            AlbumId = 5,
                            Duration = 210,
                            Genre = "Hip-hop",
                            ReleaseDate = new DateTime(1989, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Me Myself and I"
                        },
                        new
                        {
                            Id = 11,
                            AlbumId = 6,
                            Duration = 220,
                            Genre = "Hip-hop",
                            ReleaseDate = new DateTime(2020, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Push the Tempo"
                        },
                        new
                        {
                            Id = 12,
                            AlbumId = 7,
                            Duration = 350,
                            Genre = "Metal",
                            ReleaseDate = new DateTime(1991, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "We Are The Champions"
                        },
                        new
                        {
                            Id = 13,
                            AlbumId = 7,
                            Duration = 400,
                            Genre = "Metal",
                            ReleaseDate = new DateTime(1991, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Fade To Black"
                        });
                });

            modelBuilder.Entity("MusicStreaming.Core.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            DateOfBirth = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mail@example.com",
                            Password = "password",
                            Username = "Admin"
                        },
                        new
                        {
                            Id = "2",
                            DateOfBirth = new DateTime(1992, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "maya@example.com",
                            Password = "password12",
                            Username = "maya_k"
                        },
                        new
                        {
                            Id = "3",
                            DateOfBirth = new DateTime(1988, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "omar@example.com",
                            Password = "password13",
                            Username = "omar_h"
                        },
                        new
                        {
                            Id = "4",
                            DateOfBirth = new DateTime(1995, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "layla@example.com",
                            Password = "password23",
                            Username = "layla_az"
                        },
                        new
                        {
                            Id = "5",
                            DateOfBirth = new DateTime(1991, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "karim@example.com",
                            Password = "password123",
                            Username = "karim_h"
                        });
                });

            modelBuilder.Entity("MusicStreaming.Core.Entities.Album", b =>
                {
                    b.HasOne("MusicStreaming.Core.Entities.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("MusicStreaming.Core.Entities.Playlist", b =>
                {
                    b.HasOne("MusicStreaming.Core.Entities.User", "User")
                        .WithMany("Playlists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MusicStreaming.Core.Entities.PlaylistSong", b =>
                {
                    b.HasOne("MusicStreaming.Core.Entities.Playlist", "Playlist")
                        .WithMany("PlaylistSongs")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicStreaming.Core.Entities.Song", "Song")
                        .WithMany()
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Playlist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("MusicStreaming.Core.Entities.Song", b =>
                {
                    b.HasOne("MusicStreaming.Core.Entities.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("MusicStreaming.Core.Entities.Album", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("MusicStreaming.Core.Entities.Artist", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("MusicStreaming.Core.Entities.Playlist", b =>
                {
                    b.Navigation("PlaylistSongs");
                });

            modelBuilder.Entity("MusicStreaming.Core.Entities.User", b =>
                {
                    b.Navigation("Playlists");
                });
#pragma warning restore 612, 618
        }
    }
}
