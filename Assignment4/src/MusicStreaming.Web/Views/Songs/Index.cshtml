@model MusicStreaming.Application.Common.Models.PaginatedList<MusicStreaming.Web.ViewModels.SongViewModel>

@{
    ViewData["Title"] = "Songs List";
}

<h2>Songs</h2>

<div class="row mb-3">
    <div class="col-md-6">
        <input type="text" id="searchInput" placeholder="Search songs by title, artist or album..." class="form-control" />
    </div>
    <div class="col-md-6 text-right">
        <a asp-controller="Songs" asp-action="Create" class="btn btn-primary">Create New</a>
    </div>
</div>

<table id="songsTable" class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Artist</th>
            <th>Album</th>
            <th>Duration</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var song in Model.Items) {
            <tr class="song-row">
                <td>@song.Title</td>
                <td>@song.ArtistName</td>
                <td>@song.AlbumTitle</td>
                <td>@song.DurationFormatted</td>
                <td>
                    <a asp-controller="Songs" asp-action="Details" asp-route-id="@song.Id" class="btn btn-sm btn-info">Details</a>
                    <a asp-controller="Songs" asp-action="Edit" asp-route-id="@song.Id" class="btn btn-sm btn-warning">Edit</a>
                    <a asp-controller="Songs" asp-action="AddToPlaylist" asp-route-id="@song.Id" class="btn btn-sm btn-primary">Add to Playlist</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Controls -->
<div class="d-flex justify-content-between align-items-center mt-4">
    <!-- Count display -->
    <div>
        <strong>Showing @Model.Items.Count of @Model.TotalCount</strong>
    </div>
    
    <!-- Navigation -->
    <nav aria-label="Song pages">
        <ul class="pagination pagination-sm mb-0">
            <!-- Previous Page -->
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber - 1)">Previous</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Previous</span>
                </li>
            }
            
            <!-- Page Numbers -->
            @{
                int startPage = Math.Max(1, Model.PageNumber - 2);
                int endPage = Math.Min(Model.TotalPages, Model.PageNumber + 2);
            }
            
            @if (startPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="1">1</a>
                </li>
                @if (startPage > 2)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
            }
            
            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                </li>
            }
            
            @if (endPage < Model.TotalPages)
            {
                @if (endPage < Model.TotalPages - 1)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@Model.TotalPages">@Model.TotalPages</a>
                </li>
            }
            
            <!-- Next Page -->
            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber + 1)">Next</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Next</span>
                </li>
            }
        </ul>
    </nav>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        
        searchInput.addEventListener('input', function() {
            const searchTerm = searchInput.value.toLowerCase();
            const rows = document.querySelectorAll('#songsTable tbody tr.song-row');
            
            rows.forEach(row => {
                const title = row.cells[0].textContent.toLowerCase();
                const artist = row.cells[1].textContent.toLowerCase();
                const album = row.cells[2].textContent.toLowerCase();
                
                if (title.includes(searchTerm) || 
                    artist.includes(searchTerm) || 
                    album.includes(searchTerm)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        });
    });
</script>